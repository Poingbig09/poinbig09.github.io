<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Enhanced English Practice AI Assistant</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background: linear-gradient(135deg, #1a2a6c, #b21f1f, #fdbb2d);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
        }
        
        .container {
            width: 100%;
            max-width: 1200px;
            background-color: white;
            border-radius: 20px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
            overflow: hidden;
            display: flex;
            flex-direction: column;
        }
        
        .header {
            background: linear-gradient(to right, #2c3e50, #4ca1af);
            color: white;
            padding: 25px;
            text-align: center;
        }
        
        .header h1 {
            font-weight: 600;
            font-size: 28px;
            margin-bottom: 5px;
        }
        
        .header p {
            opacity: 0.9;
        }
        
        .main-content {
            display: flex;
            flex-direction: row;
            height: 550px;
        }
        
        .left-panel {
            flex: 3;
            display: flex;
            flex-direction: column;
            border-right: 1px solid #eee;
        }
        
        .tab-container {
            display: flex;
            border-bottom: 1px solid #ddd;
        }
        
        .tab {
            padding: 12px 20px;
            cursor: pointer;
            background: #f0f0f0;
            border-right: 1px solid #ddd;
            font-weight: 500;
        }
        
        .tab.active {
            background: white;
            border-bottom: 3px solid #4a6cf7;
            color: #4a6cf7;
        }
        
        .tab-content {
            flex: 1;
            overflow-y: auto;
            padding: 20px;
            display: none;
        }
        
        .tab-content.active {
            display: block;
        }
        
        .conversation-container {
            display: flex;
            flex-direction: column;
            gap: 15px;
        }
        
        .study-container {
            line-height: 1.6;
        }
        
        .study-section {
            margin-bottom: 25px;
        }
        
        .study-section h3 {
            color: #2c3e50;
            margin-bottom: 10px;
            padding-bottom: 5px;
            border-bottom: 2px solid #4ca1af;
        }
        
        .example {
            background: #f9f9f9;
            padding: 12px;
            border-radius: 8px;
            margin: 10px 0;
            border-left: 4px solid #4ca1af;
        }
        
        .right-panel {
            flex: 2;
            display: flex;
            flex-direction: column;
            background-color: #f9f9f9;
        }
        
        .vocabulary-container {
            padding: 20px;
            overflow-y: auto;
            flex: 1;
        }
        
        .vocabulary-header {
            font-size: 18px;
            font-weight: 600;
            margin-bottom: 15px;
            color: #2c3e50;
            padding-bottom: 10px;
            border-bottom: 2px solid #4ca1af;
        }
        
        .vocabulary-item {
            margin-bottom: 15px;
            padding: 12px;
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }
        
        .word {
            font-weight: bold;
            color: #2c3e50;
            font-size: 1.1em;
        }
        
        .translation {
            color: #4ca1af;
            font-style: italic;
            margin: 5px 0;
        }
        
        .example {
            margin-top: 5px;
            font-size: 0.95em;
            color: #555;
        }
        
        .difficulty-selector {
            padding: 15px 20px;
            background: #eaeaea;
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .difficulty-btn {
            padding: 8px 15px;
            background: white;
            border: 1px solid #ddd;
            border-radius: 20px;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.3s;
        }
        
        .difficulty-btn.active {
            background: #4a6cf7;
            color: white;
            border-color: #4a6cf7;
        }
        
        .message {
            max-width: 80%;
            padding: 12px 18px;
            border-radius: 18px;
            line-height: 1.5;
            position: relative;
        }
        
        .ai-message {
            background-color: #f0f4ff;
            border-bottom-left-radius: 4px;
            align-self: flex-start;
        }
        
        .user-message {
            background-color: #4a6cf7;
            color: white;
            border-bottom-right-radius: 4px;
            align-self: flex-end;
        }
        
        .correction-message {
            background-color: #fff9e6;
            border-left: 4px solid #ffcc00;
            align-self: flex-start;
            border-radius: 8px;
            margin-top: 5px;
        }
        
        .input-area {
            padding: 20px;
            border-top: 1px solid #eee;
            display: flex;
            gap: 10px;
        }
        
        #user-input {
            flex: 1;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 50px;
            font-size: 16px;
            outline: none;
            transition: border-color 0.3s;
        }
        
        #user-input:focus {
            border-color: #4a6cf7;
        }
        
        .btn {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            border: none;
            background-color: #4a6cf7;
            color: white;
            cursor: pointer;
            display: flex;
            justify-content: center;
            align-items: center;
            transition: background-color 0.3s;
            font-size: 18px;
        }
        
        .btn:hover {
            background-color: #3a5cd6;
        }
        
        .btn:active {
            transform: scale(0.97);
        }
        
        .controls {
            display: flex;
            justify-content: space-between;
            padding: 15px 20px;
            background-color: #f9fafc;
            border-top: 1px solid #eee;
        }
        
        .control-group {
            display: flex;
            gap: 10px;
        }
        
        .control-btn {
            padding: 10px 15px;
            background-color: white;
            border: 1px solid #ddd;
            border-radius: 50px;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 5px;
            font-size: 14px;
            transition: all 0.3s;
        }
        
        .control-btn:hover {
            background-color: #f0f4ff;
            border-color: #4a6cf7;
        }
        
        .scenario-selector {
            padding: 15px 20px;
            background: #eaeaea;
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
        }
        
        .scenario-btn {
            padding: 8px 15px;
            background: white;
            border: 1px solid #ddd;
            border-radius: 20px;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.3s;
        }
        
        .scenario-btn.active {
            background: #4a6cf7;
            color: white;
            border-color: #4a6cf7;
        }
        
        @media (max-width: 900px) {
            .main-content {
                flex-direction: column;
                height: 800px;
            }
            
            .left-panel {
                border-right: none;
                border-bottom: 1px solid #eee;
            }
            
            .tab-container {
                overflow-x: auto;
            }
            
            .control-group {
                flex-wrap: wrap;
                justify-content: center;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>Enhanced English Practice AI Assistant</h1>
            <p>Practice English with personalized scenarios, study materials, and progressive difficulty</p>
        </div>
        
        <div class="scenario-selector">
            <div class="scenario-btn active" data-scenario="business">Business Meeting</div>
            <div class="scenario-btn" data-scenario="travel">Travel & Directions</div>
            <div class="scenario-btn" data-scenario="social">Social Situations</div>
            <div class="scenario-btn" data-scenario="job">Job Interview</div>
            <div class="scenario-btn" data-scenario="customer">Customer Service</div>
        </div>
        
        <div class="difficulty-selector">
            <span>Difficulty:</span>
            <div class="difficulty-btn active" data-difficulty="beginner">Beginner</div>
            <div class="difficulty-btn" data-difficulty="intermediate">Intermediate</div>
            <div class="difficulty-btn" data-difficulty="advanced">Advanced</div>
        </div>
        
        <div class="main-content">
            <div class="left-panel">
                <div class="tab-container">
                    <div class="tab active" data-tab="conversation">Conversation</div>
                    <div class="tab" data-tab="study">Study Materials</div>
                    <div class="tab" data-tab="scenarios">Practice Scenarios</div>
                </div>
                
                <div class="tab-content active" id="conversation-tab">
                    <div class="conversation-container" id="conversation">
                        <div class="message ai-message">
                            Welcome! I'm your AI English assistant. I'll help you practice English with personalized scenarios and difficulty levels. Let's start with a business meeting scenario. How would you introduce yourself in a meeting?
                        </div>
                    </div>
                    
                    <div class="input-area">
                        <input type="text" id="user-input" placeholder="Type your response or use voice input...">
                        <button class="btn" id="send-btn">
                            <i class="fas fa-paper-plane"></i>
                        </button>
                        <button class="btn" id="voice-btn">
                            <i class="fas fa-microphone"></i>
                        </button>
                    </div>
                </div>
                
                <div class="tab-content" id="study-tab">
                    <div class="study-container">
                        <div class="study-section">
                            <h3>Business Meeting Vocabulary</h3>
                            <p>Essential phrases for professional meetings:</p>
                            <div class="example">
                                <strong>To get the ball rolling</strong> - To start the discussion<br>
                                <em>Translation: Para começar a discussão</em>
                            </div>
                            <div class="example">
                                <strong>To touch base</strong> - To make contact briefly<br>
                                <em>Translation: Entrar em contato brevemente</em>
                            </div>
                            <div class="example">
                                <strong>Action items</strong> - Tasks to be completed<br>
                                <em>Translation: Itens de ação</em>
                            </div>
                        </div>
                        
                        <div class="study-section">
                            <h3>Grammar Focus: Present Perfect Tense</h3>
                            <p>Use the present perfect to talk about experiences without specifying when they happened:</p>
                            <div class="example">
                                <strong>Structure:</strong> Subject + have/has + past participle<br>
                                <strong>Example:</strong> "I <u>have worked</u> on several projects like this."<br>
                                <em>Translation: Eu tenho trabalhado em vários projetos como este.</em>
                            </div>
                            <div class="example">
                                <strong>Contrast with Simple Past:</strong><br>
                                "I <u>worked</u> on a similar project last year." (specific time)<br>
                                "I <u>have worked</u> on similar projects." (general experience)<br>
                            </div>
                        </div>
                        
                        <div class="study-section">
                            <h3>Pronunciation Tip: -ed Endings</h3>
                            <p>The -ed ending in past tense verbs has three different pronunciations:</p>
                            <div class="example">
                                <strong>/t/</strong> after unvoiced consonants: worked, helped, liked<br>
                                <strong>/d/</strong> after voiced consonants and vowels: called, played, agreed<br>
                                <strong>/ɪd/</strong> after t or d: wanted, needed, decided<br>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="tab-content" id="scenarios-tab">
                    <div class="study-container">
                        <h3>Practice Scenarios</h3>
                        
                        <div class="study-section">
                            <h4>Business Meeting Roleplay</h4>
                            <p>You are in a meeting with international colleagues. Practice these situations:</p>
                            <div class="example">
                                <strong>1. Introducing yourself:</strong><br>
                                "Hello, I'm [Your Name], [Your Position] from [Your Department]. I'm responsible for..."
                            </div>
                            <div class="example">
                                <strong>2. Giving updates:</strong><br>
                                "I'd like to update everyone on the progress of..."
                            </div>
                            <div class="example">
                                <strong>3. Asking for clarification:</strong><br>
                                "Could you elaborate on that point? I want to make sure I understand correctly."
                            </div>
                        </div>
                        
                        <div class="study-section">
                            <h4>Job Interview Practice</h4>
                            <p>Common interview questions to prepare for:</p>
                            <div class="example">
                                <strong>"Tell me about yourself."</strong><br>
                                Structure your answer: Present (your current role), Past (your experience), Future (your goals).
                            </div>
                            <div class="example">
                                <strong>"What are your strengths?"</strong><br>
                                Mention 2-3 strengths with specific examples.
                            </div>
                            <div class="example">
                                <strong>"Where do you see yourself in 5 years?"</strong><br>
                                Show ambition but also commitment to the company.
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="right-panel">
                <div class="vocabulary-container">
                    <div class="vocabulary-header">Vocabulary Builder</div>
                    <div class="vocabulary-item">
                        <div class="word">Schedule</div>
                        <div class="translation">Cronograma, Agenda (Portuguese)</div>
                        <div class="example">Example: Let's check the schedule for next week's meetings.</div>
                    </div>
                    <div class="vocabulary-item">
                        <div class="word">Deadline</div>
                        <div class="translation">Prazo (Portuguese)</div>
                        <div class="example">Example: We need to meet the deadline for this project.</div>
                    </div>
                    <div class="vocabulary-item">
                        <div class="word">Brainstorm</div>
                        <div class="translation">Tempestade cerebral / Brainstorm (Portuguese)</div>
                        <div class="example">Example: Let's brainstorm some ideas for the new campaign.</div>
                    </div>
                    <div class="vocabulary-item">
                        <div class="word">Leverage</div>
                        <div class="translation">Alavancar (Portuguese)</div>
                        <div class="example">Example: We can leverage our network to find new clients.</div>
                    </div>
                    <div class="vocabulary-item">
                        <div class="word">Benchmark</div>
                        <div class="translation">Parâmetro de comparação (Portuguese)</div>
                        <div class="example">Example: We need to benchmark our performance against industry standards.</div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="controls">
            <div class="control-group">
                <button class="control-btn" id="clear-btn">
                    <i class="fas fa-trash"></i> Clear Chat
                </button>
                <button class="control-btn" id="hint-btn">
                    <i class="fas fa-lightbulb"></i> Get Hint
                </button>
            </div>
            <div class="control-group">
                <button class="control-btn" id="slow-speech-btn">
                    <i class="fas fa-tachometer-alt"></i> Slow Speech
                </button>
                <button class="control-btn" id="repeat-btn">
                    <i class="fas fa-redo"></i> Repeat
                </button>
            </div>
            <div class="control-group">
                <button class="control-btn" id="correction-btn">
                    <i class="fas fa-spell-check"></i> Correct My Text
                </button>
                <button class="control-btn" id="explain-btn">
                    <i class="fas fa-question-circle"></i> Explain Grammar
                </button>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // DOM elements
            const conversation = document.getElementById('conversation');
            const userInput = document.getElementById('user-input');
            const sendBtn = document.getElementById('send-btn');
            const voiceBtn = document.getElementById('voice-btn');
            const clearBtn = document.getElementById('clear-btn');
            const hintBtn = document.getElementById('hint-btn');
            const slowSpeechBtn = document.getElementById('slow-speech-btn');
            const repeatBtn = document.getElementById('repeat-btn');
            const correctionBtn = document.getElementById('correction-btn');
            const explainBtn = document.getElementById('explain-btn');
            const tabs = document.querySelectorAll('.tab');
            const scenarioBtns = document.querySelectorAll('.scenario-btn');
            const difficultyBtns = document.querySelectorAll('.difficulty-btn');
            
            // State variables
            let recognition;
            let isListening = false;
            let lastAIResponse = '';
            let speechRate = 1.0;
            let currentScenario = 'business';
            let currentDifficulty = 'beginner';
            
            // Vocabulary for different scenarios
            const scenarioVocabulary = {
                business: [
                    {word: "Schedule", translation: "Cronograma, Agenda", example: "Let's check the schedule for next week's meetings."},
                    {word: "Deadline", translation: "Prazo", example: "We need to meet the deadline for this project."},
                    {word: "Brainstorm", translation: "Tempestade cerebral / Brainstorm", example: "Let's brainstorm some ideas for the new campaign."},
                    {word: "Leverage", translation: "Alavancar", example: "We can leverage our network to find new clients."},
                    {word: "Benchmark", translation: "Parâmetro de comparação", example: "We need to benchmark our performance against industry standards."}
                ],
                travel: [
                    {word: "Directions", translation: "Direções", example: "Could you give me directions to the nearest station?"},
                    {word: "Accommodation", translation: "Acomodação", example: "I've booked accommodation for three nights."},
                    {word: "Destination", translation: "Destino", example: "What's your final destination?"},
                    {word: "Landmark", translation: "Ponto de referência", example: "The church is a famous landmark in this city."},
                    {word: "Itinerary", translation: "Roteiro", example: "Here's our itinerary for the trip."}
                ],
                social: [
                    {word: "Acquaintance", translation: "Conhecido", example: "He's just an acquaintance, not a close friend."},
                    {word: "Networking", translation: "Rede de contatos", example: "Networking is important for career development."},
                    {word: "Etiquette", translation: "Etiqueta", example: "Understanding social etiquette is important in different cultures."},
                    {word: "Mingle", translation: "Socializar", example: "Let's mingle with the other guests."},
                    {word: "Courtesy", translation: "Cortesia", example: "It's common courtesy to arrive on time."}
                ]
            };
            
            // Initialize Speech Recognition if available
            try {
                const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
                if (SpeechRecognition) {
                    recognition = new SpeechRecognition();
                    recognition.continuous = false;
                    recognition.lang = 'en-US';
                    recognition.interimResults = false;
                    recognition.maxAlternatives = 1;
                    
                    recognition.onresult = function(event) {
                        const transcript = event.results[0][0].transcript;
                        userInput.value = transcript;
                        isListening = false;
                        voiceBtn.innerHTML = '<i class="fas fa-microphone"></i>';
                    };
                    
                    recognition.onerror = function(event) {
                        console.error('Speech recognition error', event.error);
                        isListening = false;
                        voiceBtn.innerHTML = '<i class="fas fa-microphone"></i>';
                        addMessage("Sorry, I didn't catch that. Could you try again?", 'ai');
                    };
                    
                    recognition.onend = function() {
                        isListening = false;
                        voiceBtn.innerHTML = '<i class="fas fa-microphone"></i>';
                    };
                } else {
                    voiceBtn.disabled = true;
                    voiceBtn.title = 'Speech recognition not supported in your browser';
                }
            } catch (e) {
                console.error('Speech recognition initialization failed', e);
                voiceBtn.disabled = true;
                voiceBtn.title = 'Speech recognition not supported';
            }
            
            // Initialize Speech Synthesis
            const synth = window.speechSynthesis;
            
            // Add message to conversation
            function addMessage(text, sender) {
                const messageDiv = document.createElement('div');
                messageDiv.classList.add('message');
                messageDiv.classList.add(sender + '-message');
                messageDiv.textContent = text;
                conversation.appendChild(messageDiv);
                conversation.scrollTop = conversation.scrollHeight;
                
                if (sender === 'ai') {
                    lastAIResponse = text;
                }
            }
            
            // Add correction message to conversation
            function addCorrectionMessage(original, correction, explanation) {
                const messageDiv = document.createElement('div');
                messageDiv.classList.add('message');
                messageDiv.classList.add('correction-message');
                
                messageDiv.innerHTML = `
                    <strong>Correction:</strong> ${correction}<br>
                    <strong>Original:</strong> <s>${original}</s><br>
                    <strong>Explanation:</strong> ${explanation}
                `;
                
                conversation.appendChild(messageDiv);
                conversation.scrollTop = conversation.scrollHeight;
            }
            
            // Speak text
            function speakText(text) {
                if (synth.speaking) {
                    synth.cancel();
                }
                
                const utterance = new SpeechSynthesisUtterance(text);
                utterance.lang = 'en-US';
                utterance.rate = speechRate;
                utterance.pitch = 1.0;
                utterance.volume = 1.0;
                
                synth.speak(utterance);
            }
            
            // Generate AI response based on scenario and difficulty
            function generateAIResponse(userMessage) {
                // Check for common errors and provide corrections
                const commonErrors = [
                    {pattern: /\b(i)\b/gi, correction: "I", explanation: "The pronoun 'I' should always be capitalized."},
                    {pattern: /\b(me and)\b/gi, correction: "and I", explanation: "Use 'and I' when it's the subject of the sentence."},
                    {pattern: /\b(less)\b(.*\b(people|items|projects)\b)/gi, correction: "fewer", explanation: "Use 'fewer' for countable nouns, 'less' for uncountable nouns."},
                    {pattern: /\b(their)\b.*\b(is|was)\b/gi, correction: "there is", explanation: "Use 'there is' for existence, 'their' for possession."}
                ];
                
                for (const error of commonErrors) {
                    if (error.pattern.test(userMessage)) {
                        const correction = userMessage.replace(error.pattern, error.correction);
                        addCorrectionMessage(userMessage, correction, error.explanation);
                    }
                }
                
                // Responses based on scenario and difficulty
                const scenarioResponses = {
                    business: {
                        beginner: [
                            "Good start! In a business meeting, you might say: 'Hello, I'm [Name]. I work in [Department].'",
                            "Nice try! A common phrase is: 'I'd like to introduce myself. My name is [Name].'",
                            "Good effort! You could say: 'Pleased to meet you. I'm [Name] from [Company].'"
                        ],
                        intermediate: [
                            "Well done! You could also say: 'Let me introduce myself. I'm [Name], and I'm responsible for [Role].'",
                            "Good! For a more formal introduction: 'I'd like to take a moment to introduce myself. I'm [Name], the [Position] at [Company].'",
                            "Nice! You might add: 'I'm looking forward to collaborating with everyone on this project.'"
                        ],
                        advanced: [
                            "Excellent! You could refine your introduction: 'Good morning everyone. For those who don't know me, I'm [Name], heading up [Department]. I'll be overseeing our strategy for [Project].'",
                            "Impressive! A polished introduction: 'I'd like to briefly introduce myself. I'm [Name], joining from [Company/Department]. My focus will be on [Area], and I'm excited to contribute to our discussions today.'",
                            "Outstanding! You might say: 'Before we begin, let me introduce myself. I'm [Name], and I'll be leading the initiative on [Project]. I have extensive experience in [Field] and look forward to working with all of you.'"
                        ]
                    },
                    travel: {
                        beginner: [
                            "Good try! When asking for directions, you can say: 'Excuse me, where is the [place]?'",
                            "Nice effort! You could ask: 'How do I get to [destination]?'",
                            "Well done! A simple question: 'Is this the right way to [location]?'"
                        ],
                        intermediate: [
                            "Good! You might ask: 'Could you give me directions to the nearest train station?'",
                            "Well done! Try: 'I'm trying to find [place]. Would you be able to point me in the right direction?'",
                            "Nice! More detailed: 'What's the best way to get to [destination] from here? Should I take public transportation or a taxi?'"
                        ],
                        advanced: [
                            "Excellent! You could ask: 'I'm looking for [address]. According to my map, it should be around here, but I seem to be having trouble locating it. Could you help me?'",
                            "Impressive! You might say: 'I need to get to [place] by [time]. What would you recommend as the quickest route considering the current traffic conditions?'",
                            "Outstanding! Detailed question: 'I'm interested in seeing [landmarks]. Could you suggest an efficient itinerary that would allow me to visit these places while also leaving time for [activity]?'"
                        ]
                    }
                };
                
                // Get random response based on current scenario and difficulty
                const responses = scenarioResponses[currentScenario]?.[currentDifficulty] || 
                                 scenarioResponses['business']['intermediate'];
                
                return responses[Math.floor(Math.random() * responses.length)];
            }
            
            // Update vocabulary panel based on scenario
            function updateVocabularyPanel() {
                const vocabContainer = document.querySelector('.vocabulary-container');
                vocabContainer.innerHTML = '<div class="vocabulary-header">Vocabulary Builder</div>';
                
                const vocabulary = scenarioVocabulary[currentScenario] || scenarioVocabulary.business;
                
                vocabulary.forEach(item => {
                    const vocabElement = document.createElement('div');
                    vocabElement.classList.add('vocabulary-item');
                    vocabElement.innerHTML = `
                        <div class="word">${item.word}</div>
                        <div class="translation">${item.translation} (Portuguese)</div>
                        <div class="example">Example: ${item.example}</div>
                    `;
                    vocabContainer.appendChild(vocabElement);
                });
            }
            
            // Event Listeners
            sendBtn.addEventListener('click', function() {
                const message = userInput.value.trim();
                if (message) {
                    addMessage(message, 'user');
                    userInput.value = '';
                    
                    // Simulate AI thinking with a slight delay
                    setTimeout(function() {
                        const response = generateAIResponse(message);
                        addMessage(response, 'ai');
                        speakText(response);
                    }, 800);
                }
            });
            
            userInput.addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    sendBtn.click();
                }
            });
            
            voiceBtn.addEventListener('click', function() {
                if (recognition) {
                    if (!isListening) {
                        recognition.start();
                        isListening = true;
                        voiceBtn.innerHTML = '<div class="speaking-animation"><span></span><span></span><span></span><span></span></div>';
                    } else {
                        recognition.stop();
                        isListening = false;
                        voiceBtn.innerHTML = '<i class="fas fa-microphone"></i>';
                    }
                } else {
                    addMessage("Speech recognition is not supported in your browser. Please type your message.", 'ai');
                }
            });
            
            clearBtn.addEventListener('click', function() {
                conversation.innerHTML = '';
                addMessage("Welcome! I'm your AI English assistant. I'll help you practice English with personalized scenarios and difficulty levels. Let's start with a business meeting scenario. How would you introduce yourself in a meeting?", 'ai');
            });
            
            hintBtn.addEventListener('click', function() {
                const hints = {
                    business: [
                        "Try talking about your role and responsibilities",
                        "Mention your department and what you're working on",
                        "Express enthusiasm about collaborating with others"
                    ],
                    travel: [
                        "Ask for specific directions to a place",
                        "Inquire about transportation options",
                        "Ask for recommendations of places to visit"
                    ],
                    social: [
                        "Introduce yourself and ask about the other person",
                        "Talk about common interests or experiences",
                        "Ask open-ended questions to keep the conversation going"
                    ]
                };
                
                const scenarioHints = hints[currentScenario] || hints.business;
                const hint = scenarioHints[Math.floor(Math.random() * scenarioHints.length)];
                
                addMessage(`Hint: ${hint}`, 'ai');
                speakText(`Here's a hint: ${hint}`);
            });
            
            slowSpeechBtn.addEventListener('click', function() {
                speechRate = speechRate === 1.0 ? 0.7 : 1.0;
                slowSpeechBtn.innerHTML = speechRate === 0.7 ? 
                    '<i class="fas fa-tachometer-alt"></i> Normal Speech' : 
                    '<i class="fas fa-tachometer-alt"></i> Slow Speech';
                
                if (speechRate === 0.7) {
                    addMessage("I'll speak more slowly to help you understand.", 'ai');
                    speakText("I'll speak more slowly to help you understand.");
                } else {
                    addMessage("I'll return to normal speech speed.", 'ai');
                    speakText("I'll return to normal speech speed.");
                }
            });
            
            repeatBtn.addEventListener('click', function() {
                if (lastAIResponse) {
                    speakText(lastAIResponse);
                } else {
                    addMessage("I haven't said anything yet. Send a message to start the conversation!", 'ai');
                }
            });
            
            correctionBtn.addEventListener('click', function() {
                const message = userInput.value.trim();
                if (message) {
                    // Check for common errors and provide corrections
                    const commonErrors = [
                        {pattern: /\b(i)\b/gi, correction: "I", explanation: "The pronoun 'I' should always be capitalized."},
                        {pattern: /\b(me and)\b/gi, correction: "and I", explanation: "Use 'and I' when it's the subject of the sentence."},
                        {pattern: /\b(less)\b(.*\b(people|items|projects)\b)/gi, correction: "fewer", explanation: "Use 'fewer' for countable nouns, 'less' for uncountable nouns."},
                        {pattern: /\b(their)\b.*\b(is|was)\b/gi, correction: "there is", explanation: "Use 'there is' for existence, 'their' for possession."},
                        {pattern: /\b(you was)\b/gi, correction: "you were", explanation: "Use 'were' with 'you' regardless of singular or plural."},
                        {pattern: /\b(anyways)\b/gi, correction: "anyway", explanation: "The correct word is 'anyway' in formal English."}
                    ];
                    
                    let hasError = false;
                    
                    for (const error of commonErrors) {
                        if (error.pattern.test(message)) {
                            const correction = message.replace(error.pattern, error.correction);
                            addCorrectionMessage(message, correction, error.explanation);
                            hasError = true;
                        }
                    }
                    
                    if (!hasError) {
                        addMessage("Your text looks good! I didn't find any common errors.", 'ai');
                    }
                } else {
                    addMessage("Please type something in the input field first, then I can correct it.", 'ai');
                }
            });
            
            explainBtn.addEventListener('click', function() {
                const grammarTips = [
                    "Remember: Use 'a' before words that start with a consonant sound, and 'an' before words that start with a vowel sound.",
                    "Tip: The present perfect tense (have/has + past participle) connects the past with the present.",
                    "Remember: Adjectives usually come before nouns in English, unlike in Portuguese where they often come after.",
                    "Tip: Use 'some' in positive statements and 'any' in questions and negative statements with uncountable nouns.",
                    "Remember: Phrasal verbs (verb + preposition) are very common in English. Their meanings are often different from the individual words."
                ];
                
                const tip = grammarTips[Math.floor(Math.random() * grammarTips.length)];
                addMessage(tip, 'ai');
                speakText(tip);
            });
            
            // Tab switching functionality
            tabs.forEach(tab => {
                tab.addEventListener('click', () => {
                    // Remove active class from all tabs
                    tabs.forEach(t => t.classList.remove('active'));
                    // Add active class to clicked tab
                    tab.classList.add('active');
                    
                    // Hide all tab content
                    document.querySelectorAll('.tab-content').forEach(content => {
                        content.classList.remove('active');
                    });
                    
                    // Show the corresponding tab content
                    const tabId = tab.getAttribute('data-tab') + '-tab';
                    document.getElementById(tabId).classList.add('active');
                });
            });
            
            // Scenario switching functionality
            scenarioBtns.forEach(btn => {
                btn.addEventListener('click', () => {
                    // Remove active class from all scenario buttons
                    scenarioBtns.forEach(b => b.classList.remove('active'));
                    // Add active class to clicked button
                    btn.classList.add('active');
                    
                    // Update current scenario
                    currentScenario = btn.getAttribute('data-scenario');
                    
                    // Update vocabulary panel
                    updateVocabularyPanel();
                    
                    // Provide a new prompt based on the scenario
                    let prompt = "";
                    switch(currentScenario) {
                        case 'business':
                            prompt = "Let's practice business English. How would you introduce yourself in a meeting?";
                            break;
                        case 'travel':
                            prompt = "Let's practice travel English. How would you ask for directions to the train station?";
                            break;
                        case 'social':
                            prompt = "Let's practice social English. How would you start a conversation at a party?";
                            break;
                        case 'job':
                            prompt = "Let's practice job interview English. How would you answer 'Tell me about yourself'?";
                            break;
                        case 'customer':
                            prompt = "Let's practice customer service English. How would you handle a customer complaint?";
                            break;
                    }
                    
                    addMessage(prompt, 'ai');
                });
            });
            
            // Difficulty switching functionality
            difficultyBtns.forEach(btn => {
                btn.addEventListener('click', () => {
                    // Remove active class from all difficulty buttons
                    difficultyBtns.forEach(b => b.classList.remove('active'));
                    // Add active class to clicked button
                    btn.classList.add('active');
                    
                    // Update current difficulty
                    currentDifficulty = btn.getAttribute('data-difficulty');
                    
                    addMessage(`Difficulty set to ${currentDifficulty}. Let's continue practicing!`, 'ai');
                });
            });
            
            // Initialize vocabulary panel
            updateVocabularyPanel();
        });
    </script>
</body>
</html>
